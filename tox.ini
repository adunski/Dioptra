# This Software (Dioptra) is being made available as a public service by the
# National Institute of Standards and Technology (NIST), an Agency of the United
# States Department of Commerce. This software was developed in part by employees of
# NIST and in part by NIST contractors. Copyright in portions of this software that
# were developed by NIST contractors has been licensed or assigned to NIST. Pursuant
# to Title 17 United States Code Section 105, works of NIST employees are not
# subject to copyright protection in the United States. However, NIST may hold
# international copyright in software created by its employees and domestic
# copyright (or licensing rights) in portions of software that were assigned or
# licensed to NIST. To the extent that NIST holds copyright in this software, it is
# being made available under the Creative Commons Attribution 4.0 International
# license (CC BY 4.0). The disclaimers of the CC BY 4.0 license apply to all parts
# of the software developed or licensed by NIST.
#
# ACCESS THE FULL CC BY 4.0 LICENSE HERE:
# https://creativecommons.org/licenses/by/4.0/legalcode
[tox]
envlist = clean,pytest,black,isort,flake8,mypy,gitlint
isolated_build = True
skip_missing_interpreters = True
distshare = {toxinidir}/dist

[testenv]
extras = sdk
recreate = false

[testenv:pytest]
deps =
    coverage
    freezegun
    pytest>=7
    pytest-cov
    pytest-datadir
skip_install = false
commands = python -m pytest --cov=dioptra.pyplugs --cov=dioptra.restapi --cov=dioptra.rq --cov-append --cov-report=term-missing --cov-report=html:coverage --import-mode=importlib {posargs} {toxinidir}/tests/unit

[testenv:containers]
deps =
    docker>=4.0.0
    pytest>=7
    pytest-testinfra
skip_install = true
passenv = DIOPTRA_TEST_CONTAINER
commands = python -m pytest --import-mode=importlib {posargs} {toxinidir}/tests/containers

[testenv:containers-mlflow-tracking]
deps =
    {[testenv:containers]deps}
skip_install = true
passenv = DIOPTRA_TEST_CONTAINER
commands = python -m pytest --import-mode=importlib {posargs} {toxinidir}/tests/containers/mlflow_tracking

[testenv:containers-shellscripts]
deps =
    {[testenv:containers]deps}
skip_install = true
passenv = DIOPTRA_TEST_CONTAINER
commands = python -m pytest --import-mode=importlib {posargs} {toxinidir}/tests/containers/shellscripts

[testenv:integration]
deps =
    boto3>=1.16.0
    Click>=8.0.0
    docker>=4.0.0
    mlflow>=1.12.1
    numpy>=1.22.0
    pandas>=1.1.1
    pillow
    pytest>=7
    pytest-testinfra
    requests>=2.20
    rich>=9.1.0
    structlog>=20.2.0
skip_install = true
commands = python -m pytest --import-mode=importlib {posargs} {toxinidir}/tests/integration

[testenv:integration-hello-world]
deps =
    {[testenv:integration]deps}
skip_install = true
commands = python -m pytest --import-mode=importlib {posargs} {toxinidir}/tests/integration/hello_world

[testenv:integration-tf-mnist-classifier]
deps =
    {[testenv:integration]deps}
skip_install = true
commands = python -m pytest --import-mode=importlib {posargs} {toxinidir}/tests/integration/tf_mnist_classifier

[testenv:black]
deps =
    black>=22
skip_install = true
commands = black --config {toxinidir}/pyproject.toml --check --diff {toxinidir}/src/dioptra {toxinidir}/task-plugins/dioptra_builtins

[testenv:isort]
deps =
    isort>=5.6.0
skip_install = true
commands = isort {toxinidir}/src/dioptra {toxinidir}/task-plugins/dioptra_builtins -c -v

[testenv:flake8]
deps =
    flake8>=3.8.0
    flake8-bugbear
    mccabe
    pycodestyle
    pyflakes
skip_install = true
commands = flake8 {toxinidir}/src/dioptra {toxinidir}/task-plugins/dioptra_builtins

[testenv:mypy]
deps =
    Click>=8.0.0
    Jinja2>=3.0.0
    marshmallow>=3.9.0,<4
    mypy>=0.920
    mypy_extensions
    numpy>=1.22.0,<1.23.0
    prefect>=1.0.0,<2
    python-dateutil>=2.8.0
    SQLAlchemy[mypy]>=1.4.0,<2
    structlog>=20.2.0
    types-click
    types-cryptography
    types-enum34
    types-Flask
    types-freezegun
    types-ipaddress
    types-Jinja2
    types-python-dateutil
    types-PyYAML
    types-redis
    types-requests
    types-SQLAlchemy
    types-Werkzeug
    typing-extensions>=3.7.4.3
skip_install = true
commands = mypy {toxinidir}/src/dioptra {toxinidir}/task-plugins/dioptra_builtins

[testenv:gitlint]
deps =
    gitlint
skip_install = true
commands = gitlint

[testenv:clean]
deps =
    coverage
skip_install = true
commands = coverage erase

[pytest]
addopts = -ra
testpaths = tests
log_cli = False
log_cli_level = INFO
markers =
    info: marks tests as info (deselect with '-m "not info"')

[coverage:run]
omit =
    restapi/config.py
    restapi/models.py
    # omit __init__.py files since they are just for mypy and pytest purposes
    */__init__.py

[coverage:report]
exclude_lines =
    # Have to re-enable the standard pragma
    pragma: no cover

    # Don't complain about missing debug-only and type checking-only code:
    def __repr__
    if TYPE_CHECKING:

    # Don't complain if non-runnable code isn't run:
    \.\.\.
    if __name__ == .__main__.:
